{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"about-us/","title":"About us","text":"<p> Set Cloud Up is a French professional services company specialised in information technology services and consulting.</p> <p>We have well talented and enthousiaste engineers with significant experience in different fields.</p> <p>We provide a wide range of services in different areas from strategic consulting to getting things done.</p> <p>Our mission is to help companies use new technologies to improve their business revenues.</p>"},{"location":"about-us/#our-pillars","title":"Our pillars","text":""},{"location":"about-us/#well-architected-designs","title":"Well architected designs","text":"<ul> <li> Operational excellence</li> <li> Security</li> <li> Reliability</li> <li> Performance efficiency</li> <li> Cost optimization</li> </ul>"},{"location":"about-us/#result-oriented-projects","title":"Result Oriented Projects","text":"<ul> <li> Results-driven efforts set specific, measurable improvement goals and match resources and action plans to requirements of accomplishing success.</li> </ul>"},{"location":"about-us/#experienced-professionals","title":"Experienced Professionals","text":"<ul> <li> We have a notable experience in different industries like Retail, Banking, Insurance, Energy and Manufacturing.</li> </ul>"},{"location":"about-us/#our-work-methodology","title":"Our work methodology","text":"<ol> <li>Discover the business opportunities.</li> <li>Define the business needs and requirements.</li> <li>Design a scalable and well-secured  architecture.</li> <li>Develop a robust and maintainable code.</li> <li>Deploy at scale the developed application.</li> <li>Deliver and activate the service in production.</li> </ol>"},{"location":"about-us/#our-technological-expertise","title":"Our technological expertise","text":""},{"location":"about-us/#cloud-computing","title":"Cloud Computing","text":"<p>Migrate your legacy on-premise applications to Cloud Computing infrastures like AWS, Azure and GCP. Reduce your Ops costs and pay as you go.</p>"},{"location":"about-us/#big-data","title":"Big Data","text":"<p>Design, build and deploy Big Data Platforms. Choose your suitable platform, Cloud Data Centric, Deltalake or Lakehouse.</p>"},{"location":"about-us/#api-microservices","title":"API &amp; Microservices","text":"<p>Break your monolith application into microservices and use container orchestrators like Kubernetes.</p>"},{"location":"about-us/#machine-larning-ai","title":"Machine Larning &amp; AI","text":"<p>Design, train and deploy at scale your Machine Learning models.</p>"},{"location":"about-us/#devsecops","title":"DevSecOps","text":"<p>Strengthen your application security and improve the collaboration between developers and Ops by adopting DevSecOps approach.</p>"},{"location":"about-us/#agile","title":"Agile","text":"<p>Increase the rate and the quality of your delivery and reduce the time to market by applying Agile best prcatices.</p>"},{"location":"contact/","title":"Contact","text":"<p>Getting in touch is easy !</p> <p> 7 Rue de l'Adjudant-Chef Dericbourg, 94550 Chevilly-Larue - France</p> <p> oussama.bencharrada@setcloudup.com </p> <p>  +33 6 99 65 43 05 </p> <p> Set Cloud Up</p>"},{"location":"blog/microservice-etl/","title":"Microservice oriented data pipeline","text":"<p> Check out code source on Github</p>"},{"location":"blog/microservice-etl/#about-the-project","title":"About The Project","text":"<p>This project implements an <code>awesome-etl</code>  using modern loosely coupled <code>microservice</code> architecture. It enables a <code>synchonous</code> REST API and long running <code>asynchronous</code> ETL job through a <code>PubSub</code> pattern.</p> <p></p>"},{"location":"blog/microservice-etl/#components","title":"Components","text":""},{"location":"blog/microservice-etl/#sequence-diagram","title":"Sequence diagram","text":"<ol> <li>Prepare and save the csv file in the local disk : /volume/etl-volume/[FILE TO LOAD.csv]</li> <li>Submit an ETL job through a POST HTTP call to REST API (Get the jobId as a callback)</li> <li>ETL job starts asynchronously after receiving a message from the broker.</li> <li>Check job status through a GET HTTP call to REST API.</li> </ol>"},{"location":"blog/microservice-etl/#mongodb-data-model","title":"MongoDB Data Model","text":""},{"location":"blog/microservice-etl/#prerequisits","title":"Prerequisits","text":"<ul> <li><code>centos-7</code> Linux environment</li> <li><code>docker</code> and <code>docker-compose</code></li> <li><code>Python3</code> and <code>virtualenv</code></li> </ul>"},{"location":"blog/microservice-etl/#getting-started","title":"Getting Started","text":"<ol> <li>Install the latest version of Docker and Docker-compose</li> </ol> <p><pre><code># docker\nsudo yum install docker-ce docker-ce-cli containerd.io\nsudo systemctl start docker\nsudo docker version\n\n# docker-compose\nsudo curl -L \\\n\"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" \\\n-o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\nsudo docker-compose --version\n</code></pre> 2. Install Python 3.6.8 <pre><code>yum install gcc openssl-devel bzip2-devel libffi-devel\n\ncd /usr/src\nwget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz\n\ntar xzf Python-3.6.8.tgz\n\ncd Python-3.6.8\n./configure --enable-optimizations\nmake altinstall\n\nrm /usr/src/Python-3.6.8.tgz\n\npython3 -V\n</code></pre> 3. Install virtualenv <pre><code>python3 -m pip install --user --upgrade pip\npython3 -m pip install --user virtualenv\n</code></pre></p> <ol> <li>Create folders to be used later as docker volume mount points <pre><code>mkdir -p volumes/postgres-volume volumes/redis-volume volumes/mongo-volume \n</code></pre></li> <li>Fill database config file for api You must fill database.ini with resources created above. <pre><code>[mongodb]\nuri=mongodb://[YOUR MACHINE IPv4]:2717\ndatabase=etl\ncollection=jobs\n\n[redis]\nhost=[YOUR MACHINE IPv4]\nport=6379\ndb=0\nchannel=etl_jobs\n</code></pre></li> <li>Fill database config file for worker You must fill database.ini with resources created above. <pre><code>[mongodb]\nuri=mongodb://[YOUR MACHINE IPv4]:2717\ndatabase=etl\ncollection=jobs\n\n[redis]\nhost=[YOUR MACHINE IPv4]\nport=6379\ndb=0\nchannel=etl_jobs\n\n[mongodb]\nuri=mongodb://[YOUR MACHINE IPv4]:2717\ndatabase=etl\ncollection=jobs\n\n[redis]\nhost=[YOUR MACHINE IPv4]\nport=6379\ndb=0\nchannel=etl_jobs\n\n[postgres]\nhost=[YOUR MACHINE IPv4]\nport=5432\ndatabase=postgres\nusername=cf-lab\npassword=cf-lab\ntable=global_power_plant\n</code></pre></li> </ol>"},{"location":"blog/microservice-etl/#deployment","title":"Deployment","text":"<p>All components are deployed as microservices inside dockers container and managed by docker-compose through yaml file.</p> <p></p> <ol> <li>Start docker-compose service <pre><code>docker-compose up -d\n</code></pre></li> <li>Create Database, user and table This instruction can be done using psql cli or pgAdmin Connect to up and runnig Postgresql database and execute those instructions : <pre><code>-- create database and user\nCREATE DATABASE [DATABASE_NAME];\nCREATE USER [USERNAME] WITH PASSWORD '[PASSWORD]';\nGRANT CONNECT ON DATABASE [DATABASE_NAME] TO [USERNAME];\nGRANT USAGE ON SCHEMA public TO [USERNAME];\nGRANT all privileges on all tables in schema public TO [USERNAME];\n\n-- create table\nDROP TABLE IF EXISTS global_power_plant;\n\nCREATE TABLE global_power_plant (\ncountry VARCHAR,\ncountry_long VARCHAR,\nname VARCHAR,\ngppd_idnr VARCHAR,\ncapacity_mw FLOAT8,\nlatitude FLOAT8,\nlongitude FLOAT8,\nprimary_fuel VARCHAR,\nother_fuel1 VARCHAR,\nother_fuel2 VARCHAR,\nother_fuel3 VARCHAR,\ncommissioning_year INT,\nowner TEXT,\nsource VARCHAR,\nurl VARCHAR,\ngeolocation_source VARCHAR,\nwepp_id VARCHAR,\nyear_of_capacity_data INT,\ngeneration_gwh_2013 FLOAT8,\ngeneration_gwh_2014 FLOAT8,\ngeneration_gwh_2015 FLOAT8,\ngeneration_gwh_2016 FLOAT8,\ngeneration_gwh_2017 FLOAT8,\ngeneration_gwh_2018 FLOAT8,\ngeneration_gwh_2019 FLOAT8,\ngeneration_data_source VARCHAR,\nestimated_generation_gwh_2013 FLOAT8,\nestimated_generation_gwh_2014 FLOAT8,\nestimated_generation_gwh_2015 FLOAT8,\nestimated_generation_gwh_2016 FLOAT8,\nestimated_generation_gwh_2017 FLOAT8,\nestimated_generation_note_2013 VARCHAR,\nestimated_generation_note_2014 VARCHAR,\nestimated_generation_note_2015 VARCHAR,\nestimated_generation_note_2016 VARCHAR,\nestimated_generation_note_2017 VARCHAR,\njob_date DATE,\njob_id VARCHAR,\nfile_name VARCHAR\n);\n</code></pre></li> </ol>"},{"location":"blog/microservice-etl/#built-with","title":"Built With","text":"<p>The project is developed with : * Python3 - Programming language * Flask - Web Framework * Pandas - Data Manipulation Library * Docker - Container runtime * Docker-Compose - Docker container orchestrator * PostgreSQL - SQL Database * MongoDB - NoSQL JSON like document Database * Redis - In-memory message broker</p>"},{"location":"blog/microservice-etl/#project-content","title":"Project content","text":"<ul> <li>API - REST API code <code>Python3 and Flask dependencies</code></li> <li>WORKER - ETL worker code <code>Python3 and Pandas dependencies</code></li> <li>SWAGGER - API description <code>Swagger standard</code>.</li> </ul>"},{"location":"blog/microservice-etl/#out-of-scope","title":"Out of scope","text":"<ul> <li>Security - Authentication and Authorization</li> <li>High availability</li> <li>Scalability</li> </ul>"},{"location":"blog/microservice-etl/#authors","title":"Authors","text":"<ul> <li>Oussama BEN CHARRADA - Initial work</li> </ul>"},{"location":"blog/rest-api/","title":"REST API","text":"<p> Check out code source on Github</p>"},{"location":"blog/rest-api/#about-the-project","title":"About The Project","text":"<p>This project is a <code>Flask</code> Restfull API that exposes <code>PUT</code> and <code>GET</code> HTTP endpoints running on <code>AWS Fargate</code>.</p> <p>The APIn exposes the following HTTP-based APIs:</p>"},{"location":"blog/rest-api/#put-endpoint","title":"PUT endpoint","text":"<pre><code>Description: Saves/updates the given user's name and date of birth in the database.\nRequest: PUT /hello/`username` { \"dateOfBirth\": \"YYYY-MM-DD\" }\nResponse: 204 No Content\n</code></pre> <p>Note</p> <p><code>username</code> must contain only letters. <code>YYYY-MM-DD</code> must be a date before the today date.</p>"},{"location":"blog/rest-api/#get-endpoint","title":"GET endpoint","text":"<pre><code>Description: Returns hello birthday message for the given user\nRequest: Get /hello/`username`\nResponse: 200 OK\n</code></pre> <p>Response Examples</p> <p>A. If username's birthday is in N days: { \"message\": \"Hello, <code>username</code>! Your birthday is in N day(s)\" }</p> <p>B. If username's birthday is today: { \"message\": \"Hello, <code>username</code>! Happy birthday!\" }</p>"},{"location":"blog/rest-api/#built-with","title":"Built With","text":"<p>The application is developed with :</p> <ul> <li>Python3 - Programming language</li> <li>Flask - Web Framework</li> <li>Docker - Container runtime</li> <li>PostgreSQL - SQL Database</li> </ul>"},{"location":"blog/rest-api/#project-content","title":"Project content","text":"<ul> <li>Application - Application code <code>Python3 and dependencies</code></li> <li>Terraform - Infrastructure code <code>AWS Platform</code>.</li> <li>Swagger - API description <code>Swagger standard</code>.</li> </ul>"},{"location":"blog/rest-api/#authors","title":"Authors","text":"<ul> <li>Oussama BEN CHARRADA - Initial work</li> </ul>"},{"location":"blog/rest-api/app/","title":"Application","text":"<p>Those instructions will make the project up and running on your local machine for development and testing purposes.  See terraform section for notes on how to deploy the project on a live system.</p>"},{"location":"blog/rest-api/app/#prerequisites","title":"Prerequisites","text":"<p>Before statring, you must install all dependencies below inside a centos-7 Linux environment</p>"},{"location":"blog/rest-api/app/#1-install-python-368","title":"1- Install Python 3.6.8","text":"<pre><code>yum install gcc openssl-devel bzip2-devel libffi-devel\n\ncd /usr/src\nwget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz\n\ntar xzf Python-3.6.8.tgz\n\ncd Python-3.6.8\n./configure --enable-optimizations\nmake altinstall\n\nrm /usr/src/Python-3.6.8.tgz\n\npython3 -V\n</code></pre>"},{"location":"blog/rest-api/app/#2-install-virtualenv","title":"2- Install virtualenv","text":"<pre><code>python3 -m pip install --user --upgrade pip\npython3 -m pip install --user virtualenv\n</code></pre>"},{"location":"blog/rest-api/app/#3-install-the-latest-version-of-docker","title":"3- Install the latest version of Docker","text":"<pre><code>sudo yum install docker-ce docker-ce-cli containerd.io\nsudo systemctl start docker\n</code></pre>"},{"location":"blog/rest-api/app/#4-install-the-postgres-database","title":"4- Install the Postgres Database","text":"<pre><code>sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm\nsudo yum install -y postgresql14-server\nsudo /usr/pgsql-14/bin/postgresql-14-setup initdb\nsudo systemctl enable postgresql-14\nsudo systemctl start postgresql-14\n</code></pre>"},{"location":"blog/rest-api/app/#5-create-database-user-and-table","title":"5- Create Database, user and table","text":"<p>This instruction can be done using psql cli or pgAdmin <pre><code>-- create database and user\nCREATE DATABASE [DATABASE_NAME];\nCREATE USER [USERNAME] WITH PASSWORD '[PASSWORD]';\nGRANT CONNECT ON DATABASE [DATABASE_NAME] TO [USERNAME];\nGRANT USAGE ON SCHEMA public TO [USERNAME];\nGRANT all privileges on all tables in schema public TO [USERNAME];\n\n-- create table\nDROP TABLE IF EXISTS users;\n\nCREATE TABLE users (\n    user_id serial PRIMARY KEY,\n    username VARCHAR UNIQUE,\n    date_of_birth DATE NOT NULL\n);\n</code></pre></p>"},{"location":"blog/rest-api/app/#5-fill-database-config-file","title":"5- Fill database config file","text":"<p>You must fill database.ini with resources created above. <pre><code>[postgresql]\nhost=[DATABASE HOST URL]\ndatabase=[DATABASE NAME]\nuser=[USERNAME]\npassword=[PASSWORD]\n</code></pre></p>"},{"location":"blog/rest-api/app/#unit-tests","title":"Unit tests","text":"<p>Unit tests must be exectued inside a virtualenv.</p>"},{"location":"blog/rest-api/app/#1-activate-virtualenv","title":"1- Activate virtualenv","text":"<pre><code>python3 -m venv my_venv\nsource env/bin/activate\n</code></pre>"},{"location":"blog/rest-api/app/#2-install-all-requirements","title":"2- Install all requirements","text":"<pre><code>pip3 install -r requirements.txt\n</code></pre>"},{"location":"blog/rest-api/app/#3-run-unit-tests","title":"3- Run unit tests","text":"<pre><code>python3 -m unittest unit_tests.py -v\n</code></pre>"},{"location":"blog/rest-api/app/#service-tests","title":"Service tests","text":"<p>Service tests must be executed inside a docker container</p>"},{"location":"blog/rest-api/app/#1-build-docker-image","title":"1- Build docker image","text":"<pre><code>docker build -t hello-worl:v0.1 .\n</code></pre>"},{"location":"blog/rest-api/app/#2-run-docker-container","title":"2- Run docker container","text":"<pre><code>docker run -d -p 80:80 -t hello-world:v0.1\n</code></pre>"},{"location":"blog/rest-api/app/#3-tests-endpoints","title":"3- Tests endpoints","text":"<pre><code># Test PUT request:\ncurl -X PUT -H \"Content-Type: application/json\" \\\n    -d '{\"dateOfBirth\":\"2012-12-31\"}' \\ \n    http://localhost:80/hello/jhon\n\n# Test GET request :\ncurl -X 'GET' \\\n  'http://localhost:80/hello/jhon' \\\n  -H 'accept: application/json'\n</code></pre>"},{"location":"blog/rest-api/app/#authors","title":"Authors","text":"<ul> <li>Oussama BEN CHARRADA - Initial work</li> </ul>"},{"location":"blog/rest-api/swagger/","title":"Swagger","text":"<p>Those instructions will guide you to test the deployed API using Swagger Editor. </p>"},{"location":"blog/rest-api/swagger/#test-application-using-swagger-editor","title":"Test Application using Swagger Editor","text":"<ul> <li>Copy and paste the [PUBLIC_DNS] into api-swagger.yaml line 6.</li> <li>Copy and paste the api-swagger.yaml content into swagger-editor</li> <li>Test API calls using the swagger UI</li> </ul>"},{"location":"blog/rest-api/swagger/#authors","title":"Authors","text":"<ul> <li>Oussama BEN CHARRADA - Initial work</li> </ul>"},{"location":"blog/rest-api/terraform/","title":"Terraform","text":"<p>Those instructions will deploy the <code>REST API</code> python3 project into AWS according to the following architecture :</p> <p></p> <p>A highly available and cost effective <code>REST API</code> application deployed using those services :</p> <ul> <li>Compute : AWS ECS [FARGATE]</li> <li>Database : AWS RDS [POSTGRES]</li> <li>Load Balancing : AWS ELB [Application Load Balancer]</li> <li>Container Registry : AWS ECR</li> <li>Credential Management : AWS Secret Manager</li> <li>Logging : AWS CloudWatch Logs</li> <li>Monitoring :  AWS CloudWatch Dashboard, Metrics</li> <li>Alerting : AWS CloudWatch Alarm, AWS SNS [EMAIL]</li> </ul>"},{"location":"blog/rest-api/terraform/#prerequisites","title":"Prerequisites","text":"<p>Before statring, you must install all dependencies below inside a centos-7 Linux environment</p>"},{"location":"blog/rest-api/terraform/#1-install-terraform-v106","title":"1- Install Terraform v1.0.6","text":"<pre><code>TERRAFORM_VERSION=1.0.6\n\nsudo curl -o /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip\nsudo unzip /tmp/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -d /tmp\n\necho Moving terraform binary to /usr/local/bin/\nsudo mv /tmp/terraform /usr/local/bin/\nsudo /usr/local/bin/terraform --install-autocomplete &gt; /dev/null 2&gt;&amp;1 || echo autocomplete already installed\n</code></pre>"},{"location":"blog/rest-api/terraform/#2-create-aws-account","title":"2- Create AWS Account","text":"<p>Follow those two steps to create new account, grant permission to new user and download AWS Access key/AWS Secret Access key: * Create aws account * Create aws user and access key pair</p>"},{"location":"blog/rest-api/terraform/#3-install-aws-cli","title":"3- Install AWS CLI","text":"<pre><code>curl \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip\" -o \"awscliv2.zip\"\nunzip awscliv2.zip\nsudo ./aws/install\n</code></pre>"},{"location":"blog/rest-api/terraform/#4-configure-aws-cli","title":"4- Configure AWS CLI","text":"<pre><code>aws configure \nAWS Access Key ID [****************Z47Z]:\nAWS Secret Access Key [****************Bstj]:\nDefault region name [eu-west-3]:\nDefault output format [JSON]:\n</code></pre>"},{"location":"blog/rest-api/terraform/#deploy-application-to-aws","title":"Deploy Application to AWS","text":""},{"location":"blog/rest-api/terraform/#1-fill-terraformtfvars-file","title":"1- Fill terraform.tfvars file","text":"<pre><code>s3_name_prefix      = \"hello-world\"\nrds_username        = \"USERNAME\"\nrds_password        = \"PASSWORD\"\nemail               =\"youremail@mail.com\"\n</code></pre>"},{"location":"blog/rest-api/terraform/#2-initiate-terraform-state-file","title":"2- Initiate terraform state file","text":"<pre><code>terraform init\n</code></pre>"},{"location":"blog/rest-api/terraform/#3-create-elastic-container-registry","title":"3- Create Elastic Container Registry","text":"<p>This registry is user to store <code>REST API</code> docker image built earlier <pre><code>terraform apply --target=aws_ecr_repository.hello_world\n# Type yes\n# OUTPUT : [REGISTRY_URL] \n</code></pre></p>"},{"location":"blog/rest-api/terraform/#4-tag-and-push-docker-container-into-the-registry","title":"4- Tag and push docker container into the registry","text":"<pre><code>docker tag hello-world:v0.1 [REGISTRY_URL]:latest\ndocker push [REGISTRY_URL]:latest\n</code></pre>"},{"location":"blog/rest-api/terraform/#5-deploy-the-hole-application","title":"5- Deploy the hole application","text":"<pre><code>terraform apply\n# Type yes\n</code></pre>"},{"location":"blog/rest-api/terraform/#acceptance-tests","title":"Acceptance tests","text":"<p>Acceptance tests must be executed on the running application on AWS</p>"},{"location":"blog/rest-api/terraform/#1-create-the-database-table","title":"1- Create the database table","text":"<p>This instruction must be done using pgAdmin. Grab the RDS endpoint : [RDS_ENDPOINT], then connect to the database. <pre><code>-- create table\nDROP TABLE IF EXISTS users;\n\nCREATE TABLE users (\n    user_id serial PRIMARY KEY,\n    username VARCHAR UNIQUE,\n    date_of_birth DATE NOT NULL\n);\n</code></pre></p>"},{"location":"blog/rest-api/terraform/#2-tests-endpoints","title":"2- Tests endpoints","text":"<p>Grab the public DNS of the created Application Load Balancer : [PUBLIC_DNS] <pre><code># Test PUT request:\ncurl -X PUT -H \"Content-Type: application/json\" \\\n    -d '{\"dateOfBirth\":\"2012-12-31\"}' \\ \n    http://[PUBLIC_DNS]:80/hello/jhon\n\n# Test GET request :\ncurl -X 'GET' \\\n  'http://[PUBLIC_DNS]/hello/jhon' \\\n  -H 'accept: application/json'\n</code></pre></p>"},{"location":"blog/rest-api/terraform/#authors","title":"Authors","text":"<ul> <li>Oussama BEN CHARRADA - Initial work</li> </ul>"},{"location":"training/training-catalog/","title":"Training catalog","text":"<p> At SETCLOUDUP we provide a wide panel of digital training on site an remotely.</p> <p>We allow companies to benefit from knowledge and skills in the latest cutting-edge technologies.</p> <p>We provide the best support for your teams in their training needs in diffrent fields like : </p> <ul> <li> Cloud Native Applications </li> <li> Docker and Kubernetes</li> <li> Big Data </li> <li> DevSecOps</li> </ul> <p>Browse our Kubernetes Getting Started Training</p>"},{"location":"training/training-catalog/#about-the-trainer","title":"About the trainer","text":""},{"location":"training/kubernetes/k8s-advanced/","title":"Kubernetes advanced","text":""},{"location":"training/kubernetes/k8s-advanced/#course-description","title":"Course description","text":"<p>This training is intended for experts wishing to implement and master production Kubernetes clusters , as well as anyone wishing to understand how Kubernetes is architected, installed and maintained. The deployment of applications on Kubernetes is mentioned superficially, and this training is intended more for people wishing to set up secure, high-performance and highly available Kubernetes clusters than for engineers who need to deploy applications.</p> <p>During our training sessions, you will discover how to do it thanks to an expert:</p> <ul> <li>Automated setup and rebuild of multi-node Kubernetes clusters for development and production</li> <li>Semi-automated and hot update of Kubernetes clusters</li> <li>Advanced storage management techniques , description of storage classes and dynamic volume provisioning</li> <li>Management of users and associated rights ( RBAC )</li> <li>Presentation of the different network plugins and associated functionalities </li> <li>Delegation to users (DevOps and developers) of network filtering implementation functionalities ( NetworkPolicies )</li> <li>Techniques for developing secure containers running with restricted rights, or compatible with automated rights restriction on production cluster ( PodSecurityPolicies )</li> </ul> <p>This training provides a solid foundation for passing the CKS and CKA certifications.</p> <p> </p>"},{"location":"training/kubernetes/k8s-advanced/#goals","title":"Goals","text":"<ul> <li> Understand how to use Kubernetes</li> <li> Discover the internal architecture of Kubernetes</li> <li> Understand the main advanced components of Kubernetes</li> <li> Know how to install Kubernetes in production</li> <li> Set up authentication and user management</li> <li> Master the operation of Kubernetes virtual networks</li> <li> Optimize Kubernetes cluster monitoring</li> <li> Extend and customize the workings of Kubernetes</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#targeted-audience","title":"Targeted audience","text":"<p>Developers, Architects, System Administrators, DevOps</p>"},{"location":"training/kubernetes/k8s-advanced/#prerequisites","title":"Prerequisites","text":"<ul> <li>Have completed our Kubernetes Getting Started Training</li> <li>Basic knowledge of a Unix/Linux system and how containers work</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#course-outline","title":"Course outline","text":""},{"location":"training/kubernetes/k8s-advanced/#kubernetes-administration-in-production","title":"Kubernetes administration in production","text":"<ul> <li>Advanced kubeadm configuration</li> <li>Automated setup of a Kubernetes On-Premise cluster</li> <li>Securing a Kubernetes On-Premise cluster for production</li> <li>Implementation of high availability for the Control-Plane</li> <li>Continuous Cloud Integration with kind</li> <li>CRI: crictl, Docker and Containerd</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#kubernetes-architecture","title":"Kubernetes architecture","text":"<ul> <li>Components of the Control Plane and the Data Plane:</li> <li>How the Kubernetes Reconciliation Loop and Controller Works</li> <li>How etcd works in high-availability mode</li> <li>Internal workings of the API server: Authentication, Authorization and Admission Control</li> <li>Extending the API Server Lifecycle with MutatingAdmissionWebhooks and ValidatingAdmissionWebhooks</li> <li>Description of the Kubernetes Scheduler algorithm, predicates and priorities</li> <li>Declarative configuration</li> <li>Implicit or dynamic grouping</li> <li>API-driven interactions</li> <li>Kube-proxy: Advanced Services Virtual Network Operation</li> <li>Service discovery with CoreDNS</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#user-management-access-rights","title":"User  management access rights","text":"<ul> <li>Authentication: certificates and tokens</li> <li>Setting up the Kubeconfig file with Configuration Contexts</li> <li>Service Account Management</li> <li>Securing cluster steering with RBAC permissions</li> <li>Role, ClusterRol and RoleBinding / ClusterRoleBinding</li> <li>Creation of simple and generic RBAC to drive a production cluster</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#security","title":"Security","text":"<ul> <li>Securing the execution of Unix processes in Pods</li> <li>SecurityContext: Privileged mode, Linux Capabilities, securing Unix processes</li> <li>Industrialize Pod Security with PodSecurityPolicies</li> <li>Choosing a Secure and High-Performance CNI Network Plugin</li> <li>Industrialize network security (L4) with NetworkPolicies (ingress and egress)</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#service-quality","title":"Service quality","text":"<ul> <li>Optimal use of hardware resources thanks to Requests and Limits</li> <li>QoS classes: Guaranteed, Burstable and BestEffort</li> <li>Resource Allocation Control by Namespace with ResourceQuota</li> <li>Resource allocation control per Pod with LimitRange</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#scheduler-optimizaion","title":"Scheduler optimizaion","text":"<ul> <li>Planning control with Labels and Affinities</li> <li>NodeSelector, NodeAffinity, PodAffinity, PodAntiAffinity</li> <li>Taints and Tolerations</li> </ul>"},{"location":"training/kubernetes/k8s-advanced/#monitoring","title":"Monitoring","text":"<ul> <li>Monitoring and Logging Purposes</li> <li>Automate monitoring with the Prometheus and Grafana</li> <li>Get and aggregate your cluster and application metrics</li> <li>AlertManager: alert management and routing</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/","title":"Kubernetes getting started","text":""},{"location":"training/kubernetes/k8s-getting-started/#course-description","title":"Course description","text":"<p>This course introduces participants to container orchestration with Kubernetes. Attendees will master the foundational concepts of Kubernetes in development and production through a combination of presentations, demos, and hands-on labs, including building and deploying Kubernetes applications, cluster monitoring and debugging.</p> <p>This course also covers system components, core resources, and the requirements for minimum viable cluster security.</p> <p>This training provides a solid foundation for passing the CKAD certification.</p> <p></p>"},{"location":"training/kubernetes/k8s-getting-started/#goals","title":"Goals","text":"<ul> <li> Understand the interest and characteristics of Kubernetes and microservices</li> <li> Know how to deploy \u201c Cloud-Native \u201d applications on a large scale on a cluster or in the cloud</li> <li> Mastering kubeadm, the Kubernetes installation tool</li> <li> Understand how to deploy Kubernetes in production</li> <li> Enable automatic application scaling</li> <li> Implement high availability and self-healing of software services</li> <li> Optimize the storage of large masses of data with volumes</li> <li> Develop advanced infrastructure and application monitoring</li> <li> Automate the updating of the software versions of its applications</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#targeted-audience","title":"Targeted audience","text":"<p>This course is designed for those who are new to Kubernetes and containers, as well as those who have had exposure but would like to gain a deeper understanding. No prior knowledge of Kubernetes is required. This course is suitable for developers, operations, architects and anyone seeking to gain a strong foundation in modern, Cloud Native software delivery. </p>"},{"location":"training/kubernetes/k8s-getting-started/#prerequisites","title":"Prerequisites","text":"<ul> <li>Have basic knowledge of containers </li> <li>Basic knowledge of Unix/Linux systems</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#course-outline","title":"Course outline","text":""},{"location":"training/kubernetes/k8s-getting-started/#workshop-outline","title":"Workshop outline","text":""},{"location":"training/kubernetes/k8s-getting-started/#container-basics","title":"Container basics","text":"<ul> <li>Docker : Deep dive into Docker concepts</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-basics","title":"Kubernetes basics","text":"<ul> <li>Minikube : Provision local kubernetes cluster</li> <li>Kubectl : Configure and run kubectl commands</li> <li>Namespace : Explore kubernetes namespaces</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-workloads","title":"Kubernetes workloads","text":"<ul> <li>Pod : Run, configure, exec into and delete pods</li> <li>Deployment : Create and manage deployments</li> <li>Job : Create and schedule Jobs</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-pod-configuration","title":"Kubernetes pod configuration","text":"<ul> <li>ConfigMap : Create configMap and configure pod to use it</li> <li>Secret : Manage credentials with Secrets</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-network","title":"Kubernetes network","text":"<ul> <li>Service : Use kubernetes ClusterIP and NodePort services</li> <li>Ingress : Use Ingress to Load Balance external traffic to the cluster</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-deployment","title":"Kubernetes deployment","text":"<ul> <li>RollingUpdate : Zero downtime with RollingUpdate deployment strategy</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-storage","title":"Kubernetes storage","text":"<ul> <li>PersistentVolume : Create and mount to pods a shared hostpath volume </li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#kubernetes-monitoring","title":"Kubernetes monitoring","text":"<ul> <li>Minikube Dashboard : Explore kubernetes built in dashboard</li> <li>Prometheus - Grafana : Monitor Kubernetes resources with Prometheus and Grafana</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#advanced-workshops","title":"Advanced workshops:","text":"<ul> <li>Kubeadm cluster: Create a 3 nodes Kubernetes cluster with kubeadm</li> <li>Drain node: Drain a node to simulate a cluster maintenance</li> <li>NetworkPolicy: Secure network traffic using NetworkPolicies</li> <li>CKAD Mock Exam: Hands on CKAD mock exam</li> </ul>"},{"location":"training/kubernetes/k8s-getting-started/#_1","title":"Kubernetes getting started","text":""}]}